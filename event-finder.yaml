swagger: '2.0'
info:
  description: ''
  version: 1.1.0
  title: SheCodes Free Event Finder
basePath: /api/
tags:
  - name: events
    description: All event-related endpoints
  - name: users
    description: Event hosts and attendees
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  
  /events:
    get:
      tags:
        - events
      summary: View all current events
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EventOverview'
    post:
      tags:
        - events
      summary: Create event
      security:
        - User: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EventData'
      responses:
        '201':
          description: OK
          schema:
            type: integer
            description: event ID
  
  '/events/{id}':
    get:
      tags:
        - events
      summary: View event details
      parameters:
        - in: path
          name: id
          type: integer
          description: Id of the event to view
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventOverview'
    put:
      tags:
        - events
      summary: Update event details
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: integer
          description: Id of the event to update
          required: true
        - in: body
          name: Event Data
          schema:
            $ref: '#/definitions/EventData'
          required: true
      responses:
        '201':
          description: OK
  
  '/events/{id}/attending':
    post:
      tags:
        - events
      summary: Mark as attending an event
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: integer
          description: ID of the event
          required: true
        - in: body
          name: user ID
          schema:
            $ref: '#/definitions/Attending'
      produces:
        - application/json
      responses:
        '200':
          description: OK
  
  '/users':
    post:
      tags:
        - users
      summary: Create user
      operationId: createUser
      parameters:
        - in: body
          name: body
          description: User details. Id value is required but must be ignored
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: OK
          schema:
            type: integer
            description: Id of the created user
  
  '/users/login':
    post:
      tags:
        - users
      summary: Logs user into the system
      parameters:
        - name: username
          in: formData
          description: The user name for login
          required: true
          type: string
        - name: password
          in: formData
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogInResponse'
      consumes:
        - application/x-www-form-urlencoded
  
  '/users/logout':
    post:
      tags:
        - users
      summary: Logs out current logged in user session
      security:
        - User: []
      description: ''
      responses:
        '200':
          description: OK
  
  '/users/{id}':
    get:
      tags:
        - users
      summary: View personal account info
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: integer
          description: ID of the user
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
    put:
      tags:
        - users
      summary: Update user
      security:
        - User: []
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: user id that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object. Id value is required but must be ignored
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User edited
    delete:
      tags:
        - users
      summary: Delete user
      security:
        - User: []
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: User deleted


definitions:
  
  EventOverview:
    type: object
    description: object containing event
    properties:
      id:
        type: integer
      title:
        type: string
      location:
        type: string
      start_time:
        type: string
      end_time:
        type: string
      categories:
        type: string
      host:
        $ref: '#/definitions/PublicUser'
      attending:
        type: array
        items:
          $ref: '#/definitions/PublicUser'
  
  EventData:
    type: object
    description: object containing event
    properties:
      id:
        type: integer
      title:
        type: string
      location:
        type: string
      start_time:
        type: string
      end_time:
        type: string
      categories:
        type: string
      host:
        type: object
        properties:
          id:
            type: integer
  
  Attending:
    type: object
    properties:
      id:
        type: integer
        description: id of the user
      attending:
        type: boolean
        description: true if attending, false if not attending

  User:
    type: object
    properties:
      user:
        $ref: '#/definitions/PublicUser'
      email:
        type: string
      password:
        type: string
  
  PublicUser:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      first_name:
        type: string
      last_name:
        type: string
  
  LogInResponse:
    type: object
    properties:
      id:
        type: integer
        description: the id of the logged in user
      token:
        type: string
        description: a token to be used for future calls

securityDefinitions:
  User:
    type: apiKey
    name: X-Authorization
    in: header
