swagger: '2.0'
info:
  description: ''
  version: 1.1.0
  title: SheCodes Free Event Finder
basePath: /api/free-event-finder/
tags:
  - name: events
    description: All event-related endpoints
  - name: users
    description: Event hosts and attendees
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /events:
    get:
      tags:
        - events
      summary: View all current events
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/eventOverview'
    post:
      tags:
        - events
      summary: Create event
      description: Note that imageUri is required but is to be ignored
      security:
        - User: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/eventData'
      responses:
        '201':
          description: OK
          schema:
            type: integer
            description: event Id
        '400':
          description: Malformed event data
        '401':
          description: Unauthorized - create account to create event
  '/events/{id}':
    get:
      tags:
        - events
      summary: View event details
      parameters:
        - in: path
          name: id
          type: integer
          description: Id of the event to view
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/eventDetails'
        '404':
          description: Not found
    put:
      tags:
        - events
      summary: Update event (open/close)
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: integer
          description: Id of the event to update
          required: true
        - in: body
          name: open
          schema:
            type: object
            properties:
              open:
                type: boolean
                description: Whether the event should be open
          required: true
      responses:
        '201':
          description: OK
        '400':
          description: Malformed request
        '401':
          description: Unauthorized - create account to update event
        '403':
          description: Forbidden - unable to update a event you do not own
        '404':
          description: Not found
  '/events/{id}/rewards':
    get:
      tags:
        - rewards
      summary: View event rewards
      parameters:
        - in: path
          name: id
          type: integer
          description: event id
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Reward'
        '404':
          description: Not found
    put:
      tags:
        - rewards
      summary: Update event rewards
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: integer
          description: Id of the event to update
          required: true
        - in: body
          name: rewards
          description: Array of event rewards
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Reward'
      responses:
        '201':
          description: OK
        '400':
          description: Malformed request
        '401':
          description: Unauthorized - create account to update event
        '403':
          description: Forbidden - unable to update a event you do not own
        '404':
          description: Not found
  '/events/{id}/attending':
    post:
      tags:
        - events
      summary: Mark as attending an event
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: integer
          description: Id of the event
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Pledge'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad user, event, or pledge details'
        '401':
          description: Unauthorized - create account to pledge to a event
        '403':
          description: Forbidden - cannot pledge to own event - this is fraud!
        '404':
          description: Not found
  /users:
    post:
      tags:
        - users
      summary: Create user
      operationId: createUser
      parameters:
        - in: body
          name: body
          description: User details. Id value is required but must be ignored
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: OK
          schema:
            type: integer
            description: Id of the created user
        '400':
          description: Malformed request
  /users/login:
    post:
      tags:
        - users
      summary: Logs user into the system
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogInResponse'
        '400':
          description: Invalid username/password supplied
  '/users/logout':
    post:
      tags:
        - users
      summary: Logs out current logged in user session
      security:
        - User: []
      description: ''
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized - already logged out
  '/users/{id}':
    get:
      tags:
        - users
      summary: Get user by user id
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PublicUser'
        '400':
          description: Invalid id supplied
        '404':
          description: User not found
    put:
      tags:
        - users
      summary: Update user
      security:
        - User: []
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: user id that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object. Id value is required but must be ignored
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Unauthorized - not logged in
        '403':
          description: Forbidden - account not owned
        '404':
          description: User not found
    delete:
      tags:
        - users
      summary: Delete user
      security:
        - User: []
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: User deleted
        '401':
          description: Unauthorized - not logged in
        '403':
          description: Forbidden - account not owned
        '404':
          description: User not found
definitions:
  eventOverview:
    type: object
    description: >-
      Used for the GET - events/ endpoint. This contains a subset of the
      event data.
    properties:
      id:
        type: integer
      title:
        type: string
      location:
        type: string
      start_time:
        type: string
      end_time:
        type: string
      categories:
        type: string
      host:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
  eventDetails:
    type: object
    description: >-
      object containing event with dynamic content (backers, progress,
      rewards)
    properties:
      event:
        $ref: '#/definitions/event'
      progress:
        $ref: '#/definitions/Progress'
      backers:
        type: array
        items:
          type: object
          properties:
            name:
              type: integer
            amount:
              type: integer
  event:
    type: object
    description: 'object containing event, and generated data (creation date, id)'
    properties:
      id:
        type: integer
      creationDate:
        type: integer
      data:
        $ref: '#/definitions/eventData'
  eventData:
    type: object
    description: object containing raw event data.
    required:
      - title
      - subtitle
      - description
      - creators
      - target
    properties:
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      imageUri:
        type: string
      target:
        type: integer
        description: target amount in cents
      creators:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
  User:
    type: object
    properties:
      user:
        $ref: '#/definitions/PublicUser'
      password:
        type: string
  PublicUser:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  LogInResponse:
    type: object
    properties:
      id:
        type: integer
        description: the id of the logged in user
      token:
        type: string
        description: a token to be used for future calls
securityDefinitions:
  User:
    type: apiKey
    name: X-Authorization
    in: header
